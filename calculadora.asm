.MODEL SMALL
    MOSTRA_PIXEL MACRO
    MOV AL,ES:[DI]      ;move byte para AL
    AND AL,1110011B     ;limpa o bit de posicao
    OR  AL,1000B         ;escreve posicao 3,2
    STOSB               ;carrega na memoria
ENDM
.DATA
    MSG00 DB 10,13,'BEM VINDO(A) A CALCULADORA!!! $'
    MSG0 DB ,10,13,'1 - ADICAO',10,13,'2 - SUBTRACAO ',10,13,'3 - MULTIPLICACAO',10,13,'4 - DIVISAO',10,13,'5 - POTENCIA',10,13,'6 - UMA BASE ELEVADO A DOIS',10,13,'7 - UM EXPOENTE NA BASE 10',10,13,'8 - LOG',10,13,'9 - MODULO',10,13,'10 - PORCENTAGEM',10,13,'11 - RAIZ QUADRADA ',10,13,'12 - x^2+3y+((x+y)/2)',10,13,'13 - CONVERTER BINARIO PARA DECIMAL',10,13,'14 - CONVERTER BINARIO PARA HEXADECIMAL',10,13,'15 - CONVERTER DE HEXADECIMAL PARA BINARIO',10,13,'16 - CONVERTER DE HEXADECIMAL PARA DECIMAL',10,13,'17 - CONVERTER DE DECIMAL PARA HEXADECIMAL',10,13,'18 - CONVERTER DECIMAL PARA BINARIO',10,13,'19 - SAIDA',10,13,'SUA ESCOLHA : $'
    MSG1 DB 10,13,'OPCAO INVALIDA. TENTE NOVAMENTE!$'
    MSG2 DB 10,13,'NUMERO UM: $'
    MSG3 DB 10,13,'NUMERO DOIS: $'
    MSG4 DB 10,13,'BASE: $'
    MSG5 DB 10,13,'EXPOENTE: $'
    MSG7 DB 10,13,'RESULTADO: $'
    MSG8 DB 10,13,'MODULO: $'
    MSG9 DB 10,13,'QUANTOS PORCENTOS: $'
    MSG10 DB 10,13,'NUMERO: $'
    MSG11 DB 10,13, 'X: $'
    MSG12 DB 10,13, 'Y: $'
    MSG13 DB 10,13, 'BINARIO: $'
    MSG14 DB 10,13, 'HEXADECIMAL: $'
    MSG15 DB 10,13, 'DECIMAL: $'
    MSG16 DB 10,13, 'RADICANDO: $'
    NUM1 DW ?
    NUM2 DW ?
    RESULT DW ?
    NUMERO1NEGATIVO DW ?
    NUMERO2NEGATIVO DW ?
    XMAISY DW ?
    XAOCUBO DW ?
    I3VEZESY DW ?
    MULTIPLICADO2 DW ?
.STACK 100h
.CODE
MAIN PROC
    MOV AX, @DATA
    MOV DS, AX

    MOV AH,0            ;seleciona modo grafico
    MOV AL,4H           ;modo 4 - 320x200 - 4cores
    INT 10H

    MOV AX,0B800H       ;segmento memoria video
    MOV ES,AX           ;aponta em Es - usaremos STOSB

    MOV CX,0            ;inicializa CX
    MOV DI,0000H        ;inicializa DI
    MOV SI,2000H        ;inicializa SI
MOSTRA:
    MOSTRA_PIXEL        ;linha zero = B800:0000
    PUSH DI             ;linha um = B800:2000
    MOV DI,SI           ;linha dois = B800:0050
    MOSTRA_PIXEL        ;linha tres = B800:2050
    MOV SI,DI
    POP DI
    ADD DI,4EH          ;pula para proxima linha
    ADD SI,50H
    INC CX
    CMP CX,80           ;escreve 80 pixels
    JL MOSTRA

    MOV AH,0            ;espera o teclado
    INT 16H

    LEA DX, MSG00
    MOV AH, 09h
    INT 21H
INICIO:

    LEA DX, MSG0
    MOV AH, 09h
    INT 21h

    CALL NUMERO1

    MOV AX, NUM1

    CMP AX,1h
    JE OPC1

    CMP AX, 2h
    JE OPC2

    CMP AX, 3h
    JE OPC3

    CMP AX, 4h
    JE OPC4

    CMP AX, 5h
    JE OPC5

    CMP AX, 6
    JE OPC6

    CMP AX, 7
    JE OPC7

    CMP AX, 8
    JE OPC8

    CMP AX, 9
    JE OPC9

    CMP AX, 10
    JE OPC10

    CMP AX, 11
    JE OPC11

    CMP AX, 12
    JE OPC12

    CMP AX, 13
    JE OPC13

    CMP AX, 14
    JE OPC14

    CMP AX,15
    JE OPC15

    CMP AX, 16
    JE OPC16

    CMP AX, 17
    JE OPC17

    CMP AX, 18
    JE OPC18

    CMP AX, 19
    JE OPC18

    LEA DX, MSG1
    MOV AH, 09h
    INT 21h

    JMP INICIO
OPC1: CALL ADICAO
OPC2: CALL SUBTRACAO
OPC3: CALL MULTIPLICACAO
OPC4: CALL DIVISAO
OPC5: CALL POTENCIA
OPC6: CALL ELEVADOADOIS
OPC7: CALL EXPOENTEDEZ
OPC8: CALL LOG
OPC9: CALL MODULO
OPC10: CALL PORCENTAGEM
OPC11: CALL RAIZQUADRADA
OPC12: CALL FUNCAO
OPC13: CALL BINARIO_DECIMAL
OPC14: CALL BINARIO_HEXADECIMAL
OPC15: CALL HEXADECIMAL_BINARIO
OPC16: CALL HEXADECIMAL_DECIMAL
OPC17: CALL DECIMAL_HEXADECIMAL
OPC18: CALL DECIMAL_BINARIA
OPC19: CALL SAIDA
MAIN ENDP
ADICAO PROC
    LEA DX, MSG2
    MOV AH, 09h
    INT 21h
    CALL NUMERO1
    LEA DX, MSG3
    MOV AH, 09H
    INT 21H
    CALL NUMERO2
    MOV AX, NUM1
    MOV BX, NUM2
    ADD AX, BX
    MOV RESULT, AX
    CALL SAIDA_DECIMAL
    JMP INICIO
ADICAO ENDP
SUBTRACAO PROC
    LEA DX, MSG2
    MOV AH, 09h
    INT 21h
    CALL NUMERO1
    LEA DX, MSG3
    MOV AH, 09H
    INT 21H
    CALL NUMERO2
    MOV AX, NUM1
    MOV BX, NUM2
    SUB AX, BX
    MOV RESULT, AX
    CALL SAIDA_DECIMAL
    JMP INICIO
SUBTRACAO ENDP
MULTIPLICACAO PROC
    LEA DX, MSG2
    MOV AH, 09h
    INT 21h
    CALL NUMERO1
    LEA DX, MSG3
    MOV AH, 09H
    INT 21H
    CALL NUMERO2
    MOV AX, NUM1
    MOV BX, NUM2
    IMUL BX
    MOV RESULT, AX
    CALL SAIDA_DECIMAL
    JMP INICIO
MULTIPLICACAO ENDP
DIVISAO PROC
    LEA DX, MSG2
    MOV AH, 09h
    INT 21h
    CALL NUMERO1
    LEA DX, MSG3
    MOV AH, 09H
    INT 21H
    CALL NUMERO2
    MOV AX, NUM1
    MOV BX, NUM2
    IDIV BX
    MOV RESULT, AX
    CALL SAIDA_DECIMAL
    JMP INICIO
DIVISAO ENDP
POTENCIA PROC

    LEA DX, MSG4
    MOV AH, 09h
    INT 21h

    CALL NUMERO1

    LEA DX, MSG5
    MOV AH, 09H
    INT 21H

    CALL NUMERO2

    CALL OPERACAO_POTENCIA

    JMP INICIO
POTENCIA ENDP
ELEVADOADOIS PROC
    LEA DX, MSG4
    MOV AH, 09h
    INT 21h

    CALL NUMERO1
    MOV AX, NUM1
    MOV BX, NUM1
    MUL BX
    MOV RESULT, AX
    CALL SAIDA_DECIMAL
    JMP INICIO
ELEVADOADOIS ENDP
EXPOENTEDEZ PROC
    LEA DX, MSG5
    MOV AH, 09h
    INT 21h

    MOV NUM1, 10

    CALL NUMERO2

    CALL OPERACAO_POTENCIA

    JMP INICIO

EXPOENTEDEZ ENDP
LOG PROC
    LEA DX, MSG1
    MOV AH, 09h
    INT 21h

    JMP INICIO

LOG ENDP
MODULO PROC
    LEA DX, MSG8
    MOV AH, 09h
    INT 21h

    CALL NUMERO1
    MOV BX, NUM1
    MOV AX, NUMERO1NEGATIVO
    CMP AX, 01h
    JE NEGAR_MODULO
    JMP IMPRIMIR_MODULO
NEGAR_MODULO:
    NEG BX
IMPRIMIR_MODULO:
    MOV RESULT, BX
    CALL SAIDA_DECIMAL

    JMP INICIO
MODULO ENDP
PORCENTAGEM PROC
    LEA DX, MSG9
    MOV AH, 09h
    INT 21h

    CALL NUMERO1

    LEA DX, MSG10
    MOV AH, 09h
    INT 21h

    CALL NUMERO2

    XOR DX, DX

    MOV AX, NUM1
    MOV BX, NUM2

    IMUL BX
    MOV RESULT, AX
    MOV BX, 100
    IDIV BX
    CMP DX, 01
    JGE RESULTADO_FRACPOT
    MOV RESULT, AX
    CALL SAIDA_DECIMAL
    JMP INICIO
RESULTADO_FRACPOT:

    CALL SAIDA_DECIMAL

    MOV DL, '/'
    MOV AH, 02h
    INT 21h

    MOV DL, '1'
    MOV AH, 02H
    INT 21h
    MOV DL, '0'
    MOV AH, 02h
    INT 21h

    MOV DL, '0'
    MOV AH, 02h
    INT 21h

    JMP INICIO
PORCENTAGEM ENDP
RAIZQUADRADA PROC
    LEA DX, MSG16
    MOV AH, 09h
    INT 21h

    CALL NUMERO1

    MOV BX, 1
    XOR CX, CX
LOOP_RAIZQUADRADA:
    SUB AX, BX
    INC CX
    CMP AX, 0
    JE RAIZQUADRADA_PERFEITA
    JMP RAIZ_IMPERFEITA
RAIZQUADRADA_PERFEITA:
    JMP RESULTADO
RAIZ_IMPERFEITA:
    CMP AX, -1
    JNGE RAIZQUADRADA_IMPERFEITA
    JMP CONTINUA
RAIZQUADRADA_IMPERFEITA:
    JMP RESULTADO
CONTINUA:
    ADD BX, 2
    JMP LOOP_RAIZQUADRADA
RESULTADO:
    MOV  RESULT, CX

    CALL SAIDA_DECIMAL

    JMP INICIO
RAIZQUADRADA ENDP
FUNCAO PROC
    LEA DX, MSG11
    MOV AH, 09h
    INT 21h

    CALL NUMERO1

    LEA DX, MSG12
    MOV AH, 09h
    INT 21h

    CALL NUMERO2

    MOV AX, NUM1
    MOV BX, NUM2

    ADD AX, BX
    MOV XMAISY, AX

    MOV AX, NUM1
    MOV BX, NUM1
    IMUL BX
    MOV XAOCUBO, AX

    MOV AX, NUM2
    MOV BX, 03
    IMUL BX
    MOV I3VEZESY, AX

    MOV AX,XAOCUBO
    MOV BX, I3VEZESY

    XOR DX, DX
    ADD AX, BX

    MOV BX, 2
    IMUL BX
    ADD AX, XMAISY
    MOV RESULT, AX
    IDIV BX
    CMP DX, 01
    JGE RESULTADO_FRACIONARIO
    MOV RESULT, AX
    CALL SAIDA_DECIMAL
    JMP INICIO
RESULTADO_FRACIONARIO:

    CALL SAIDA_DECIMAL

    MOV DL, '/'
    MOV AH, 02h
    INT 21h

    MOV DL, '2'
    MOV AH, 02H
    INT 21h

    JMP INICIO
FUNCAO ENDP
BINARIO_DECIMAL PROC

    CALL ENTRADA_BINARIA

    CALL SAIDA_DECIMAL

    JMP INICIO
BINARIO_DECIMAL ENDP
BINARIO_HEXADECIMAL PROC

    CALL ENTRADA_BINARIA

    CALL SAIDA_HEXADECIMAL

    JMP INICIO
BINARIO_HEXADECIMAL ENDP
HEXADECIMAL_BINARIO PROC
    CALL ENTRADA_HEXADECIMAL
    CALL SAIDA_BINARIA

    JMP INICIO
HEXADECIMAL_BINARIO ENDP
HEXADECIMAL_DECIMAL PROC
    CALL ENTRADA_HEXADECIMAL
    MOV RESULT, BX
    CALL SAIDA_DECIMAL
    JMP INICIO
HEXADECIMAL_DECIMAL ENDP
DECIMAL_HEXADECIMAL PROC
    LEA DX, MSG15
    MOV AH, 09h
    INT 21h

    CALL NUMERO1

    MOV BX, NUM1

    CALL SAIDA_HEXADECIMAL

    JMP INICIO
DECIMAL_HEXADECIMAL ENDP
DECIMAL_BINARIA PROC
    LEA DX, MSG15
    MOV AH, 09h
    INT 21h

    CALL NUMERO1

    MOV BX, NUM1

    CALL SAIDA_BINARIA

    JMP INICIO
DECIMAL_BINARIA ENDP
NUMERO1 PROC
    MOV NUM1, 0
    MOV NUMERO1NEGATIVO,0
    MOV CX, 06
    MOV BX, 10

    MOV AH, 01h
    INT 21h

    CMP AL, '-'
    JE NUM1NEGATIVO
    JMP LEITURA_NUMERO1
NUM1NEGATIVO:
    MOV NUMERO1NEGATIVO, 1
    XOR AX, AX

LEITURA_NUMERO1:
    CMP AL, 0DH
    JE FIM1
    AND AL, 0FH
    XOR AH, AH
    ADD NUM1, AX
    MOV AX, NUM1
    MUL BX
    MOV NUM1, AX
    MOV AH, 01
    INT 21h
    LOOP LEITURA_NUMERO1
FIM1:
    MOV AX, NUM1
    DIV BX
    MOV CX, NUMERO1NEGATIVO
    CMP CX, 01
    JE NEGARNUM1
    JMP POSNUM1
NEGARNUM1:
    NEG AX
POSNUM1:
    MOV NUM1, AX

    RET
NUMERO1 ENDP
NUMERO2 PROC
    MOV NUM2,0
    MOV NUMERO2NEGATIVO, 0

    MOV CX, 06
    MOV BX, 10

    MOV AH, 01
    INT 21h

    CMP AL, '-'
    JE NUM2NEGATIVO
    JMP LEITURA_NUMERO2
NUM2NEGATIVO:
    MOV NUMERO2NEGATIVO, 1
    XOR AX, AX

LEITURA_NUMERO2:
    CMP AL, 0DH
    JE FIM2
    AND AL, 0FH
    XOR AH, AH
    ADD NUM2, AX
    MOV AX, NUM2
    MUL BX
    MOV NUM2, AX
    MOV AH, 01
    INT 21h
    LOOP LEITURA_NUMERO2
FIM2:
    MOV AX, NUM2
    DIV BX
    MOV NUM2, AX
    MOV CX, NUMERO2NEGATIVO
    CMP CX, 01
    JE NEGARNUM2
    JMP POSNUM2
NEGARNUM2:
    NEG AX
POSNUM2:
    MOV NUM2, AX
    RET
NUMERO2 ENDP
ENTRADA_BINARIA PROC
    LEA DX, MSG13
    MOV AH, 09h
    INT 21h

    MOV CX,16
    MOV AH,1h
    XOR BX,BX
    INT 21h

LOOP_BINARIO:
    CMP AL,0Dh
    JE  FIMBIN
    AND AL,0Fh
    SHL BX,1
    OR  BL,AL
    INT 21h
    LOOP LOOP_BINARIO
FIMBIN:
   MOV RESULT, BX

    RET
ENTRADA_BINARIA ENDP
SAIDA_BINARIA PROC
    LEA DX, MSG13
    MOV AH, 09h
    INT 21h

    MOV CX,16
    MOV AH,02h
PT1_SAIDABINARIA:
    ROL BX,1
    JNC  PT2_SAIDABINARIA
    MOV DL, 31h
    INT 21h
    JMP PT3_SAIDABINARIA

PT2_SAIDABINARIA:
    MOV DL, 30h
    INT 21h
PT3_SAIDABINARIA:
    LOOP  PT1_SAIDABINARIA

    RET
SAIDA_BINARIA ENDP
ENTRADA_HEXADECIMAL PROC
    LEA DX, MSG14
    MOV AH, 09h
    INT 21h

    XOR BX,BX
    MOV CL,4
    MOV AH,1h
    INT 21h

TOPOENTRADA_HEXADECIMAL:
    CMP AL,0Dh
    JE  FIMENTRADA_HEXADECIMAL
    CMP AL, 39h
    JG  LETRAENTRADA_HEXADECIMAL
    AND AL,0Fh
    JMP  DESLENTRADA_HEXADECIMAL
LETRAENTRADA_HEXADECIMAL:
    SUB AL,57h

DESLENTRADA_HEXADECIMAL:
    SHL BX,CL
    OR BL,AL
    INT 21h
    JMP TOPOENTRADA_HEXADECIMAL
FIMENTRADA_HEXADECIMAL:
    RET
ENTRADA_HEXADECIMAL ENDP
SAIDA_HEXADECIMAL PROC
    LEA DX, MSG14
    MOV AH, 09h
    INT 21h

    MOV CH,4
    MOV CL,4
    MOV AH,2h
TOPO:
    MOV DL,BH
    SHR DL,CL
    CMP DL, 0Ah
    JAE LETRA
    ADD DL,30h
    JMP PT1_SAIDAHEXADECIMAL

LETRA:
    ADD DL,37h
PT1_SAIDAHEXADECIMAL:
    INT 21h
    ROL BX,CL
    DEC CH
    JNZ TOPO
    RET
SAIDA_HEXADECIMAL ENDP
SAIDA_DECIMAL PROC
    LEA DX, MSG7
    MOV AH,09h
    INT 21h

    MOV AX, RESULT
    CWD
    CMP DX, 0FFFFH
    JE RESULTADO_NEGATIVO
    JMP RESULTADO_POSITIVO
RESULTADO_NEGATIVO:
    NEG AX
    MOV RESULT, AX
    MOV DL, '-'
    MOV AH, 02h
    INT 21h
RESULTADO_POSITIVO:
    XOR CX, CX
    MOV BX, 10
    XOR DX, DX
LOOP_POSITIVO:
    MOV AX, RESULT
    CMP AX, 09
    JNGE ULTIMODIGITO
    DIV BX
    PUSH DX
    XOR DX, DX
    INC CX
    MOV RESULT, AX
    JMP LOOP_POSITIVO
ULTIMODIGITO:
    MOV AX, RESULT
    PUSH AX
    INC CX
PRINT:
    POP DX
    ADD DL, 30h
    MOV AH, 02H
    INT 21h
    LOOP PRINT
    RET
SAIDA_DECIMAL ENDP
OPERACAO_POTENCIA PROC

    MOV AX, NUM2
    CMP AX, 0
    JE EXPOENTE_ZERO
    CMP AX, 1
    JE EXPOENTE_UM
    JMP EXPOENTE_MAIOR_ZERO
EXPOENTE_ZERO:

    MOV RESULT, 1
    CALL SAIDA_DECIMAL
    JMP INICIO

EXPOENTE_UM:
    MOV AX, NUM1
    MOV RESULT, AX
    CALL SAIDA_DECIMAL

EXPOENTE_MAIOR_ZERO:
    MOV CX, NUMERO2NEGATIVO
    CMP CX, 1
    JE EXPOENTE_NEGATIVO
    JMP OPERACAOPOT
EXPOENTE_NEGATIVO:
    MOV AX, NUM2
    NEG AX
    MOV NUM2,AX

OPERACAOPOT:
    MOV CX, NUM2
    DEC CX
    MOV AX, NUM1

LACO_POTENCIA:
    MOV BX, NUM1
    IMUL BX
    MOV RESULT, AX
    MOV AX, RESULT
    LOOP LACO_POTENCIA
    MOV RESULT, AX

    LEA DX, MSG7
    MOV AH,09h
    INT 21h

    MOV AX, RESULT
    CWD
    CMP DX, 0FFFFH
    JE RESULTADO_NEGATIVOPOTENCIA
    JMP RESULTADO_POSITIVOPOTENCIA
RESULTADO_NEGATIVOPOTENCIA:
    NEG AX
    MOV RESULT, AX
    MOV DL, '-'
    MOV AH, 02h
    INT 21h

RESULTADO_POSITIVOPOTENCIA:
    MOV AX, NUMERO2NEGATIVO
    CMP AX, 01h
    JE EXPOENTE_NEGATIVO_POTENCIA
    XOR CX, CX
    MOV BX, 10
    XOR DX, DX
    JMP RESULTADOPOTENCIA
EXPOENTE_NEGATIVO_POTENCIA:
    MOV DL, '1'
    MOV AH, 02h
    INT 21h
    MOV DL, '/'
    MOV AH, 02h
    INT 21h
    XOR CX, CX
    MOV BX, 10
    XOR DX, DX
RESULTADOPOTENCIA:
    XOR CX, CX
    MOV BX, 10
    XOR DX, DX
LOOP_POSITIVO_POTENCIA:
    MOV AX, RESULT
    CMP AX, 09
    JNGE ULTIMODIGITO_POTENCIA
    DIV BX
    PUSH DX
    XOR DX, DX
    INC CX
    MOV RESULT, AX
    JMP LOOP_POSITIVO_POTENCIA
ULTIMODIGITO_POTENCIA:
    MOV AX, RESULT
    PUSH AX
    INC CX
PRINT_POTENCIA:
    POP DX
    ADD DL, 30h
    MOV AH, 02H
    INT 21h
    LOOP PRINT_POTENCIA
    RET
OPERACAO_POTENCIA ENDP
SAIDA PROC
    MOV AH, 4CH
    INT 21H
SAIDA ENDP
END MAIN
